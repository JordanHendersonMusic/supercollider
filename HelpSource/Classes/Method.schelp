class::Method
categories::Core>Kernel
summary:: Code that implements an operation upon instances of a Class.
related:: Classes/Class

description::
A Method is code that is a part of the set of operations upon instances of a link::Classes/Class::.

subsection:: Related Keywords

method:: thisMethod

The global pseudo-variable code::thisMethod:: always evaluates to the enclosing Method in a class definition, much like code::thisFunction::.
When executed outside that context, it returns link::Classes/Interpreter#-functionCompileContext::, the method within which all interpreted code executes.

code::
// if the following code were compiled as part of the class library:
SomeClass {
	methodThatPostsItself {
		thisMethod.postln;
	}
}

// then running this would post
// "SomeClass:methodThatPostsItself"
a = SomeClass.new;
a.methodThatPostsItself;
::

code::thisMethod:: is frequently used to pass information to error-throwing methods. For example, the implementation of code::Nil.new:: is:

code::
*new { ^this.shouldNotImplement(thisMethod) }
::

See also: link::Classes/Function#.thisFunction#thisFunction::.

instanceMethods::

method::ownerClass
returns::
The link::Classes/Class:: for which the method is part of the implementation.

method::name
returns::
A link::Classes/Symbol:: which is the name of the Method.

method::primitiveName
returns::
A link::Classes/Symbol:: which contains the name of the primitive function that implements the Method, if there is one.

method:: filenameSymbol
returns::
A link::Classes/Symbol:: which is the full path of the source file that this method is defined in.

method::isClassMethod
returns::
A link::Classes/Boolean:: where true represents if this link::Classes/Method:: is a class method,
and false represents when this is an instance method.

method::evaluateWithArgsAndKwArgs
Evaluate the method if the passed in arguments, this should not be used in everyday code,
and is only here to facilitate the implementation of link::Classes/Object#-doesNotUnderstandWithKeys::
where argument names must be checked.

argument::argsArray
The non-keyword arguments as an link::Classes/Array::.

argument::keywordArgsEvent
The 'keyworded' arguments as an link::Classes/IdentityDictionary::, where the keyword is the key.

argument::thisObject
The object to call this link::Classes/Method:: on, the object must be a kind of class held in link::#-ownerClass::.
In the case of calling class methods, as opposed to instance methods, the non-meta class is passed in.


code::
// example of calling a class method
Scale.class
.findRespondingMethodFor(\newFromKey)
.evaluateWithArgsAndKwArgs([\major], (\tuning: Tuning.choose), Scale)

// example of calling an instance method
(
var a = [1,2,3];
a.class
.findRespondingMethodFor(\collect)
.evaluateWithArgsAndKwArgs([], (function: (_ * 2)), a) // returns [2, 4, 6]
)
::



